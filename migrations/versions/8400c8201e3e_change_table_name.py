"""change table name

Revision ID: 8400c8201e3e
Revises: a718160e17cd
Create Date: 2024-05-07 18:47:44.156222

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8400c8201e3e'
down_revision = 'a718160e17cd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('nickname', sa.String(length=64), nullable=True),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('avatar', sa.String(length=256), nullable=True),
    sa.Column('gender', sa.String(length=16), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('sex', sa.String(length=16), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('img', sa.String(length=256), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('reorder', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('date_to_finish', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('accepted_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accepted_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('t_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['t_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('answer_like',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('answer_id', sa.Integer(), nullable=True),
    sa.Column('t_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['answer_id'], ['answer.id'], ),
    sa.ForeignKeyConstraint(['t_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('qa_task')
    op.drop_table('qa_answer')
    op.drop_table('qa_answer_like')
    op.drop_table('accounts_user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=False),
    sa.Column('nickname', sa.VARCHAR(length=64), nullable=True),
    sa.Column('password', sa.VARCHAR(length=256), nullable=False),
    sa.Column('avatar', sa.VARCHAR(length=256), nullable=True),
    sa.Column('gender', sa.VARCHAR(length=16), nullable=True),
    sa.Column('sex', sa.VARCHAR(length=16), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('email_verified', sa.BOOLEAN(), nullable=True),
    sa.Column('email', sa.VARCHAR(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='email_unique'),
    sa.UniqueConstraint('username', name='username_unique')
    )
    op.create_table('qa_answer_like',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('answer_id', sa.INTEGER(), nullable=True),
    sa.Column('t_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['answer_id'], ['qa_answer.id'], ),
    sa.ForeignKeyConstraint(['t_id'], ['qa_task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['accounts_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('qa_answer',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('t_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['t_id'], ['qa_task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['accounts_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('qa_task',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('date_to_finish', sa.DATETIME(), nullable=True),
    sa.Column('title', sa.VARCHAR(length=128), nullable=False),
    sa.Column('img', sa.VARCHAR(length=256), nullable=True),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('view_count', sa.INTEGER(), nullable=True),
    sa.Column('reorder', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('accepted_user_id', sa.INTEGER(), nullable=True),
    sa.Column('category', sa.VARCHAR(length=64), nullable=True),
    sa.ForeignKeyConstraint(['accepted_user_id'], ['accounts_user.id'], name='accepted_user_id'),
    sa.ForeignKeyConstraint(['user_id'], ['accounts_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('answer_like')
    op.drop_table('answer')
    op.drop_table('task')
    op.drop_table('user')
    # ### end Alembic commands ###
